{"version":3,"sources":["getFormData.js","components/RenderNavbarLink.js","components/Navbar.js","store/actions/userActions.js","store/actions/types.js","components/AlbumCard.js","components/TopAlbums.js","components/RegisterSection.js","components/About.js","pages/Home.js","pages/Login.js","components/Genre.js","pages/Songs.js","pages/Register.js","components/ProfileMenu.js","components/Playlist.js","pages/Profile.js","store/reducers/userReducer.js","store/reducers/songsReducer.js","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["getFormData","object","formData","FormData","Object","keys","forEach","key","append","useStyles","makeStyles","theme","activeLink","color","match","grey","RenderNavbarLink","to","name","buttonVariant","exact","useRouteMatch","path","classes","style","textDecoration","Button","disabled","variant","className","root","flexGrow","title","bgr","background","connect","user","logout_user","dispatch","console","log","fetch","method","then","resp","json","data","success","type","props","AppBar","position","Toolbar","Grid","container","justify","alignItems","Typography","spacing","item","logged_in","onClick","maxWidth","media","height","AlbumCard","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","CardActions","size","marginTop","paddingContent","padding","marginTopContent","whiteFont","albumList","albumSection","backgroundColor","deepPurple","TopAlbums","align","direction","xs","sm","flex","fontVariant","buttonSpacing","red","RegisterSection","href","smallCaps","fontVaiant","About","id","element","Home","formGrid","login_user","email","password","body","payload","useState","setEmail","setPassword","onSubmit","e","preventDefault","TextField","autoFocus","fullWidth","label","onChange","target","value","display","flexWrap","justifyContent","overflow","palette","paper","gridList","transform","primary","light","titleBar","marginBottom","GridList","cols","map","tile","GridListTile","pk","src","cover_image","alt","GridListTileBar","lightBackgroundColor","subtitle","artist","actionIcon","IconButton","aria-label","Songs","state","hasErrors","genres","res","setState","this","entries","index","genre","songs","Genre","Component","firstname","setFirstName","fn_errors","setFNErrors","show_fn_errors","setShow_fn_erros","middlename","setMiddleName","lastname","setLastName","ln_errors","setLNErrors","show_ln_errors","setShow_ln_erros","email_errors","setEmailErrors","show_email_errors","setShow_email_erros","confirm_email","setConfirmEmail","ce_errors","setCEErrors","show_ce_errors","setShow_ce_erros","pwd_errors","setPwdErrors","show_pwd_errors","setShow_pwd_erros","confirm_password","setConfirmPassword","cpwd_errors","setCPWDErrors","show_cpwd_errors","setShowc_pwd_erros","render_feedback","setRenderFeedback","feedback_message","setFeedbackMessage","history","useHistory","Alert","severity","push","message","errors","md","required","error","helperText","join","defaultValue","list","width","fullList","ProfileMenu","anchor","React","top","left","bottom","right","toggleDrawer","open","event","Fragment","Drawer","onClose","clsx","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","Divider","tileData","img","author","Playlist","margin","indigo","search","borderRadius","shape","fade","common","white","marginLeft","breakpoints","up","inputRoot","searchIcon","pointerEvents","inputInput","paddingLeft","transition","transitions","create","user_data","wrap","InputBase","placeholder","input","inputProps","initial_state","userReducer","action","songsReducer","rootReducer","combineReducers","middleware","thunk","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","App","CssBaseline","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2cb28a75.chunk.js","sourcesContent":["const getFormData = (object) => {\r\n  const formData = new FormData();\r\n  Object.keys(object).forEach((key) => formData.append(key, object[key]));\r\n  return formData;\r\n};\r\n\r\nexport default getFormData;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  activeLink: {\r\n    color: ({ match }) => (match ? grey[700] : \"white\"),\r\n  },\r\n}));\r\n\r\nconst RenderNavbarLink = ({ to, name, buttonVariant, exact }) => {\r\n  const match = useRouteMatch({\r\n    path: to,\r\n    exact: exact,\r\n  });\r\n  const classes = useStyles({ match });\r\n\r\n  return (\r\n    <Link to={to} style={{ textDecoration: \"none\" }}>\r\n      <Button\r\n        disabled={match}\r\n        variant={match ? \"contained\" : buttonVariant}\r\n        className={classes.activeLink}\r\n        color=\"inherit\"\r\n      >\r\n        {name}\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default RenderNavbarLink;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport PropType from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logout_user } from \"../store/actions/userActions\";\r\n\r\nimport RenderNavbarLink from \"./RenderNavbarLink\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  bgr: {\r\n    background: \"red\",\r\n  },\r\n  activeLink: {\r\n    color: ({ match }) => (match ? grey[700] : \"white\"),\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid container justify=\"flex-start\" alignItems=\"center\">\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            MY-SONGIFY\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={1} justify=\"flex-end\" alignItems=\"center\">\r\n          <Grid item>\r\n            <RenderNavbarLink to=\"/songs\" name=\"Songs\" exact={true} />\r\n          </Grid>\r\n          <Grid item>\r\n            <RenderNavbarLink to=\"/\" name=\"About\" exact={true} />\r\n          </Grid>\r\n          <Grid item>\r\n            {props.user.logged_in ? (\r\n              <Button\r\n                onClick={() => {\r\n                  props.logout_user();\r\n                }}\r\n                variant={\"outlined\"}\r\n                color=\"inherit\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            ) : (\r\n              <RenderNavbarLink to=\"/login\" name=\"Login\" exact={false} />\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            {props.user.logged_in ? (\r\n              <RenderNavbarLink\r\n                buttonVariant=\"outlined\"\r\n                to=\"/profile\"\r\n                name=\"Profile\"\r\n                exact={true}\r\n              />\r\n            ) : (\r\n              <RenderNavbarLink\r\n                buttonVariant=\"outlined\"\r\n                to=\"/register\"\r\n                name=\"Register\"\r\n                exact={true}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout_user: PropType.func.isRequired,\r\n  user: PropType.object.isRequired,\r\n};\r\nconst mapStateToProps = ({ user }) => ({ user });\r\nexport default connect(mapStateToProps, { logout_user })(Navbar);\r\n","import { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT_SUCCESS } from \"./types\";\r\n\r\nimport getFormData from \"./../../getFormData\";\r\n\r\nexport const logout_user = () => {\r\n  return (dispatch) => {\r\n    console.log(\"logout action\");\r\n    fetch(\"users/logout\", {\r\n      method: \"POST\",\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        console.log(\"logout data\");\r\n        if (data.success) {\r\n          dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const login_user = (email, password) => {\r\n  return (dispatch) => {\r\n    fetch(\"users/login\", {\r\n      method: \"POST\",\r\n      body: getFormData({ email, password }),\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: LOGIN_FAILURE,\r\n            payload: data.user,\r\n          });\r\n        }\r\n      });\r\n  };\r\n};\r\n","// login types\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\n\r\n// logout types\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const FETCH_SONGS = \"FETCH_SONGS\";\r\nexport const LOGOUT_USER = \"LOGOUT_USEAR\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\r\n\r\n// alert actions\r\nexport const SUCCESS = \"SUCCESS\";\r\nexport const ERROR = \"ERROR\";\r\nexport const CLEAR = \"CLEAR\";\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst AlbumCard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://upload.wikimedia.org/wikipedia/en/3/39/The_Weeknd_-_Starboy.png\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"subtitle1\" component=\"h2\">\r\n            Album Name\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AlbumCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AlbumCard from \"./AlbumCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"1rem\",\r\n  },\r\n  paddingContent: {\r\n    padding: \"2rem\",\r\n  },\r\n  marginTopContent: {\r\n    marginTop: \"2rem\",\r\n  },\r\n  whiteFont: {\r\n    color: \"white\",\r\n  },\r\n  albumList: {\r\n    padding: \"1rem\",\r\n  },\r\n  albumSection: {\r\n    marginTop: \"2rem\",\r\n    padding: \"2rem\",\r\n    backgroundColor: deepPurple[700],\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst TopAlbums = () => {\r\n  const classes = useStyles();\r\n  const preventDefault = (e) => e.preventDefault();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h3\" align=\"center\">\r\n        Top Albumns\r\n      </Typography>\r\n      <Grid container direction=\"row\" className={classes.albumSection}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={5}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"stretch\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h4\">\r\n              Keep Track of the Best Music in the Industry\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item className={classes.marginTopContent}>\r\n            <Link to=\"/songs\" style={{ textDecoration: \"none\" }}>\r\n              <Button variant=\"contained\">CHECK OUT THE CONETENT</Button>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={7}\r\n          container\r\n          direction=\"row\"\r\n          spacing={2}\r\n          className={classes.albumList}\r\n        >\r\n          <Grid item xs={6} sm={4}>\r\n            <AlbumCard />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <AlbumCard />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <AlbumCard />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <AlbumCard />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <AlbumCard />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <AlbumCard />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopAlbums;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: \"2rem\",\r\n    padding: \"2rem\",\r\n    fontVariant: \"small-caps\",\r\n  },\r\n  buttonSpacing: {\r\n    marginTop: \"2rem\",\r\n    padding: \"1rem 8rem\",\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst RegisterSection = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h3\">Start Your Journey</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Link to=\"/register\" style={{ textDecoration: \"none\" }}>\r\n          <Button\r\n            size=\"large\"\r\n            className={classes.buttonSpacing}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            href=\"#contained-buttons\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RegisterSection;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    marginTop: \"2rem\",\r\n    padding: \"2rem\",\r\n    color: \"white\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  smallCaps: {\r\n    fontVaiant: \"small-caps\",\r\n  },\r\n}));\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Grid item xs={12}>\r\n        <Typography className={classes.smallCaps} variant=\"h3\">\r\n          About\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography id=\"about\" variant=\"subtitle1\" element=\"p\">\r\n          This project has been created to test the insides of websites like\r\n          Tidal and Spotify which are used for listening to songs.\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport TopAlbums from \"../components/TopAlbums\";\r\nimport RegisterSection from \"../components/RegisterSection\";\r\nimport About from \"../components/About\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid xs={12} item>\r\n        <TopAlbums />\r\n      </Grid>\r\n      <Grid item>\r\n        <RegisterSection />\r\n      </Grid>\r\n      <Grid item>\r\n        <About />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login_user } from \"../store/actions/userActions\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n// TODO: hide and show passwords\r\n// import Visibility from \"@material-ui/icons/Visibility\";\r\n// import VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n// TODO: show required fields\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"91vh\",\r\n  },\r\n  formGrid: {\r\n    maxWidth: \"600px\",\r\n    padding: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"f@l.com\");\r\n  const [password, setPassword] = useState(\"test\");\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.login_user(email, password);\r\n  };\r\n\r\n  if (props.user.logged_in) {\r\n    return <Typography variant=\"h2\">You are Already Logged in</Typography>;\r\n  }\r\n  return (\r\n    <form onSubmit={handleLoginSubmit}>\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Login </Typography>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.formGrid}\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n          spacing={4}\r\n        >\r\n          <Grid item>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              type=\"email\"\r\n              id=\"email-input\"\r\n              label=\"Email\"\r\n              onChange={handleEmailChange}\r\n              value={email}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              fullWidth\r\n              type=\"password\"\r\n              id=\"password-input\"\r\n              label=\"Password\"\r\n              onChange={handlePasswordChange}\r\n              variant=\"outlined\"\r\n              value={password}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login_user: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => ({ user });\r\nexport default connect(mapStateToProps, { login_user })(Login);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\",\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.4) 70%, rgba(0,0,0,0) 100%)\",\r\n  },\r\n}));\r\n\r\nconst GenreList = ({ title, data, user }) => {\r\n  const handleLikeClick = (e) => {\r\n    // console.log(e.currentTarget.name);\r\n    // TODO: if user is logged in then send request to update like\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root} style={{ marginBottom: \"2rem\" }}>\r\n      <Grid\r\n        container\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        style={{ marginBottom: \"1rem\", padding: \"0 4rem\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"default\">\r\n            See All\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {data.map((tile) => (\r\n          <GridListTile key={tile.pk}>\r\n            <img src={tile.cover_image} alt={tile.name} />\r\n            <GridListTileBar\r\n              title={tile.name}\r\n              className={classes.lightBackgroundColor}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              subtitle={`by: ${tile.artist}`}\r\n              actionIcon={\r\n                <div>\r\n                  {user.logged_in ? (\r\n                    <div>\r\n                      <IconButton\r\n                        name={`like-${tile.pk}`}\r\n                        type=\"button\"\r\n                        onClick={(e) => handleLikeClick(e)}\r\n                        aria-label={`star ${tile.name}`}\r\n                      >\r\n                        <ThumbUpIcon className={classes.title} />\r\n                      </IconButton>\r\n                      <IconButton aria-label={`star ${tile.name}`}>\r\n                        <ThumbDownIcon className={classes.title} />\r\n                      </IconButton>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nGenreList.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => ({ user });\r\n\r\nexport default connect(mapStateToProps, {})(GenreList);\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport GenreList from \"../components/Genre\";\r\n\r\nexport default class Songs extends Component {\r\n  state = {\r\n    hasErrors: false,\r\n    genres: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.setState({ genres: { genre1: tileData } });\r\n    fetch(\"/songs/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          this.setState({ hasErrors: false });\r\n          this.setState({ genres: data.data });\r\n        } else {\r\n          this.setState({ hasErrors: true });\r\n        }\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.hasErrors) {\r\n      return (\r\n        <div>\r\n          <h2>Got an error </h2>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {/* <GenreList title=\"Recent Popular Songs\" data={tileData} />; */}\r\n        {Object.entries(this.state.genres).map(([genre, songs], index) => {\r\n          return (\r\n            <GenreList key={index} title={`${genre}'s Songs`} data={songs} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport getFormData from \"../getFormData\";\r\n// TODO: hide and show passwords\r\n// import Visibility from \"@material-ui/icons/Visibility\";\r\n// import VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n// TODO: show required fields\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"91vh\",\r\n  },\r\n  formGrid: {\r\n    maxWidth: \"600px\",\r\n    padding: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst Register = (props) => {\r\n  const classes = useStyles();\r\n  const [firstname, setFirstName] = useState(\"\");\r\n  const [fn_errors, setFNErrors] = useState([]);\r\n  const [show_fn_errors, setShow_fn_erros] = useState(false);\r\n\r\n  const [middlename, setMiddleName] = useState(\"\");\r\n\r\n  const [lastname, setLastName] = useState(\"\");\r\n\r\n  const [ln_errors, setLNErrors] = useState([]);\r\n  const [show_ln_errors, setShow_ln_erros] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [email_errors, setEmailErrors] = useState([]);\r\n  const [show_email_errors, setShow_email_erros] = useState(false);\r\n\r\n  const [confirm_email, setConfirmEmail] = useState(\"\");\r\n\r\n  const [ce_errors, setCEErrors] = useState([]);\r\n  const [show_ce_errors, setShow_ce_erros] = useState(false);\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [pwd_errors, setPwdErrors] = useState([]);\r\n  const [show_pwd_errors, setShow_pwd_erros] = useState(false);\r\n\r\n  const [confirm_password, setConfirmPassword] = useState(\"\");\r\n\r\n  const [cpwd_errors, setCPWDErrors] = useState([]);\r\n  const [show_cpwd_errors, setShowc_pwd_erros] = useState(false);\r\n\r\n  const [render_feedback, setRenderFeedback] = useState(false);\r\n  const [feedback_message, setFeedbackMessage] = useState(\"\");\r\n\r\n  const handleFirstNameChange = (e) => setFirstName(e.target.value);\r\n  const handleMiddleNameChange = (e) => setMiddleName(e.target.value);\r\n  const handleLastNameChange = (e) => setLastName(e.target.value);\r\n  const handleEmailChnage = (e) => setEmail(e.target.value);\r\n  const handleConfirmEmailChange = (e) => setConfirmEmail(e.target.value);\r\n  const handlePasswordChange = (e) => setPassword(e.target.value);\r\n  const handlePasswordConfirmChange = (e) => setConfirmPassword(e.target.value);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      firstname,\r\n      middlename,\r\n      lastname,\r\n      email,\r\n      confirm_email,\r\n      password,\r\n      confirm_password,\r\n    };\r\n    fetch(\"/users/register\", { method: \"POST\", body: getFormData(data) })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (!data.success) {\r\n          setRenderFeedback(true);\r\n          setFeedbackMessage(data.message);\r\n          if (data.errors) {\r\n            if (data.errors.firstname) {\r\n              setShow_fn_erros(true);\r\n              setFNErrors(data.errors.firstname);\r\n            }\r\n            if (data.errors.lastname) {\r\n              setShow_ln_erros(true);\r\n              setLNErrors(data.errors.lastname);\r\n            }\r\n            if (data.errors.email) {\r\n              setShow_email_erros(true);\r\n              setEmailErrors(data.errors.email);\r\n            }\r\n            if (data.errors.confirm_email) {\r\n              setShow_ce_erros(true);\r\n              setCEErrors(data.errors.confirm_email);\r\n            }\r\n\r\n            if (data.errors.password) {\r\n              setShow_pwd_erros(true);\r\n              setPwdErrors(data.errors.password);\r\n            }\r\n\r\n            if (data.errors.confirm_password) {\r\n              setShowc_pwd_erros(true);\r\n              setCPWDErrors(data.errors.confirm_password);\r\n            }\r\n          }\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  if (props.user.logged_in) {\r\n    return <Typography variant=\"h2\">You are logged in</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      // spacing={}\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Register</Typography>\r\n        {render_feedback ? (\r\n          <Alert severity=\"error\">{feedback_message}</Alert>\r\n        ) : null}\r\n      </Grid>\r\n\r\n      <form onSubmit={handleSubmitForm}>\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.formGrid}\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"flex-start\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                autoFocus\r\n                required\r\n                error={show_fn_errors}\r\n                helperText={show_fn_errors ? fn_errors.join(\", \") : null}\r\n                onChange={handleFirstNameChange}\r\n                defaultValue={firstname}\r\n                fullWidth\r\n                type=\"text\"\r\n                id=\"firstname-input\"\r\n                label=\"First Name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleMiddleNameChange}\r\n                value={middlename}\r\n                type=\"text\"\r\n                id=\"middlename-input\"\r\n                label=\"Middle Name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                error={show_ln_errors}\r\n                helperText={show_ln_errors ? ln_errors.join(\", \") : null}\r\n                onChange={handleLastNameChange}\r\n                value={lastname}\r\n                type=\"text\"\r\n                id=\"lastname-input\"\r\n                label=\"Last Name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                error={show_email_errors}\r\n                helperText={show_email_errors ? email_errors.join(\", \") : null}\r\n                onChange={handleEmailChnage}\r\n                value={email}\r\n                type=\"email\"\r\n                id=\"email-input\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                error={show_ce_errors}\r\n                helperText={show_ce_errors ? ce_errors.join(\", \") : null}\r\n                onChange={handleConfirmEmailChange}\r\n                value={confirm_email}\r\n                type=\"email\"\r\n                id=\"confirm-email-input\"\r\n                label=\"Confirm Email\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                error={show_pwd_errors}\r\n                helperText={show_pwd_errors ? pwd_errors.join(\", \") : null}\r\n                onChange={handlePasswordChange}\r\n                value={password}\r\n                type=\"password\"\r\n                id=\"password-input\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                error={show_cpwd_errors}\r\n                helperText={show_cpwd_errors ? cpwd_errors.join(\", \") : null}\r\n                onChange={handlePasswordConfirmChange}\r\n                value={confirm_password}\r\n                type=\"password\"\r\n                id=\"confirm-password-input\"\r\n                label=\"Confirm Password\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\nconst mapStatesToProps = ({ user }) => ({ user });\r\nexport default connect(mapStatesToProps, {})(Register);\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nconst ProfileMenu = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <Typography variant=\"p\">Actions</Typography>\r\n      <List>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Upload Song\"} />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Create Playlist\"} />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Create Album\"} />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Typography variant=\"p\">Your Library</Typography>\r\n      <List>\r\n        <ListItem button key={\"Upload Song\"}>\r\n          <ListItemIcon>\r\n            <MailIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Delete Song\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* {[\"left\", \"right\", \"top\", \"bottom\"].map((anchor) => ( */}\r\n      <React.Fragment key={\"left\"}>\r\n        <Button onClick={toggleDrawer(\"left\", true)}>\r\n          <MenuIcon />\r\n        </Button>\r\n        <Drawer\r\n          anchor={\"left\"}\r\n          open={state[\"left\"]}\r\n          onClose={toggleDrawer(\"left\", false)}\r\n        >\r\n          {list(\"left\")}\r\n        </Drawer>\r\n      </React.Fragment>\r\n      {/* ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileMenu;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\",\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n  },\r\n}));\r\n\r\nconst tileData = [\r\n  {\r\n    img:\r\n      \"https://static.billboard.com/files/media/Nirvana-Nevermind-album-covers-billboard-1000x1000-compressed.jpg\",\r\n    title: \"son1\",\r\n    author: \"author1\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://static.billboard.com/files/media/Nirvana-Nevermind-album-covers-billboard-1000x1000-compressed.jpg\",\r\n    title: \"son1\",\r\n    author: \"author1\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://static.billboard.com/files/media/Nirvana-Nevermind-album-covers-billboard-1000x1000-compressed.jpg\",\r\n    title: \"son1\",\r\n    author: \"author1\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://static.billboard.com/files/media/Nirvana-Nevermind-album-covers-billboard-1000x1000-compressed.jpg\",\r\n    title: \"son1\",\r\n    author: \"author1\",\r\n  },\r\n];\r\nconst Playlist = ({ title }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          margin: \"2rem 0 0 0\",\r\n          padding: \"1rem 2rem\",\r\n          //   backgroundColor: \"green\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n        <Button variant=\"outlined\">See More</Button>\r\n      </div>\r\n      <GridList className={classes.gridList} cols={2.5}>\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              classes={{\r\n                root: classes.titleBar,\r\n                title: classes.title,\r\n              }}\r\n              actionIcon={\r\n                <IconButton aria-label={`star ${tile.title}`}>\r\n                  <StarBorderIcon className={classes.title} />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ProfileMenus from \"../components/ProfileMenu\";\r\nimport { fade, makeStyles } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport Playlists from \"../components/Playlist\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: \"100vw\",\r\n    backgroundColor: indigo[50],\r\n    width: \"100%\",\r\n    flex: 1,\r\n    height: \"91vh\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  if (!props.user.logged_in) {\r\n    return <div>You must login to view your profile</div>;\r\n  }\r\n  const user = props.user.user_data;\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      wrap=\"wrap\"\r\n      className={classes.root}\r\n      alignItems=\"center\"\r\n      justify=\"flex-start\"\r\n    >\r\n      <Grid item container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n        <Grid item>\r\n          <ProfileMenus />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">\r\n            welcome {user.firstname} {user.lastname}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid item>\r\n        <Playlists title=\"Playlist's Name\" />\r\n      </Grid>\r\n      <Grid item>\r\n        <Playlists title=\"playlist2\" />\r\n      </Grid>\r\n      <Grid item>\r\n        <Playlists title=\"playlist3\" />\r\n      </Grid>\r\n      <Grid item>\r\n        <Playlists title=\"Album 1\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = ({ user }) => ({ user });\r\nexport default connect(mapStateToProps, {})(Profile);\r\n","import { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT_SUCCESS } from \"../actions/types\";\r\n\r\nconst initial_state = {\r\n  logged_in: false,\r\n  user_data: {},\r\n};\r\n\r\nconst userReducer = (state = initial_state, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logged_in: true,\r\n        user_data: action.payload,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return initial_state;\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logged_in: false,\r\n        user_data: {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default userReducer;\r\n","// import { FETCH_SONGS } from \"../actions/types\";\r\nconst songsReducer = () => [];\r\n\r\nexport default songsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\nimport songsReducer from \"./songsReducer\";\r\nconst rootReducer = combineReducers({ user: userReducer, songs: songsReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initial_state = {};\r\nconst middleware = [thunk];\r\n\r\nconst saveToLocalStorage = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState == null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst persistedState = loadFromLocalStorage();\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\nexport default store;\r\n","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Songs from \"./pages/Songs\";\r\nimport Register from \"./pages/Register\";\r\nimport Profile from \"./pages/Profile\";\r\n\r\nimport store from \"./store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <CssBaseline />\r\n        <Router>\r\n          <Grid container direction=\"column\">\r\n            <Grid item style={{ margin: 0 }}>\r\n              <Navbar />\r\n            </Grid>\r\n            <Grid item>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n                <Route exact path=\"/songs\">\r\n                  <Songs />\r\n                </Route>\r\n\r\n                <Route exact path=\"/login\">\r\n                  <Login />\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                  <Register />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile />\r\n                </Route>\r\n              </Switch>\r\n            </Grid>\r\n          </Grid>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}