{"version":3,"sources":["pages/Home.js","pages/Login.js","pages/Register.js","pages/Songs.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["TopAlbumsCard","className","style","height","Home","to","id","Login","type","placeholder","Register","useForm","register","handleSubmit","errors","watch","useState","globalErrors","setGlobalErrors","length","map","el","i","key","onSubmit","data","push","console","log","name","ref","required","minLength","maxLength","SongGenre","songs","song","pk","SongCard","cover_image","src","Songs","isLoading","setLoading","setSongs","useEffect","fetch","then","res","json","resp","success","Fragment","Object","keys","genre","MobileNavbar","showMenuItems","setMenuItems","onClick","Navbar","href","App","path","exact","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"4OAyFMA,EAAgB,WAClB,OAAO,yBAAKC,UAAU,wFAClB,yBAAKC,MAAO,CAAEC,OAAQ,OAASF,UAAU,uBACzC,yBAAKA,UAAU,8DAA6D,sCAA5E,IAA8F,uCAIvFG,EA7FF,WACT,OAAO,yBAAKH,UAAU,yDAClB,6BAASA,UAAU,gEACf,wBAAIA,UAAU,gEAAd,cACA,uBAAGA,UAAU,qFAAb,0OAGJ,6BAASA,UAAU,2EACf,yBAAKA,UAAU,0EACX,wBAAIA,UAAU,2GAAd,aACI,wBAAIA,UAAU,oBADlB,WAC8C,wBAAIA,UAAU,oBACxD,0BAAMA,UAAU,iBAAhB,cAFJ,IAEsD,wBAAIA,UAAU,oBAFpE,UAE+F,wBAAIA,UAAU,oBACzG,0BAAMA,UAAU,iBAAhB,cAGR,yBAAKA,UAAU,mFACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGR,6BAASA,UAAU,+DACf,wBAAIA,UAAU,8DAAd,sBAGA,kBAAC,IAAD,CAAMI,GAAG,YACLJ,UAAU,2GADd,aAKJ,6BAASK,GAAG,QAAQL,UAAU,gDAC1B,wBAAIA,UAAU,yHAAd,sBAGA,uBAAGA,UAAU,wFAAb,qDACsD,wBAAIA,UAAU,oBADpE,gDAEsD,wBAAIA,UAAU,oBAFpE,mCCxBGM,EAZD,WACV,OAAQ,yBAAKN,UAAU,6HACnB,yBAAKA,UAAU,+GACX,2BAAOA,UAAU,0CAA0CO,KAAK,QAAQC,YAAY,WAExF,yBAAKR,UAAU,+GACX,2BAAOA,UAAU,0CAA0CO,KAAK,WAAWC,YAAY,cAE3F,4BAAQR,UAAU,wEAAlB,W,eCqEOS,EA5EE,WAAO,IAAD,EAC+BC,cAA1CC,EADW,EACXA,SAAUC,EADC,EACDA,aAAqBC,GADpB,EACaC,MADb,EACoBD,QADpB,EAEqBE,mBAAS,IAF9B,mBAEZC,EAFY,KAEEC,EAFF,KAenB,OAAQ,yBAAKjB,UAAU,2DAClBgB,EAAaE,OAAS,GAAK,yBAAKlB,UAAU,qDACtCgB,EAAaG,KAAI,SAACC,EAAIC,GAAL,OAAW,yBAAKC,IAAKD,GAAID,OAG/C,0BAAMG,SAAUX,GAjBH,SAAAY,GACTA,EAAK,mBAAqBA,EAAI,QAC9BR,EAAaS,KAAK,wBAClBR,EAAgBD,IAEhBQ,EAAI,WAAiBA,EAAK,sBAC1BR,EAAaS,KAAK,2BAClBR,EAAgBD,IAEpBU,QAAQC,IAAIH,MAQ4BxB,UAAU,wFAC9C,yBAAKA,UAAU,+GACX,2BAAO4B,KAAK,aAAaC,IAAKlB,EAAS,CAAEmB,UAAU,EAAMC,UAAW,EAAGC,UAAW,KAC9EhC,UAAU,mDAAmDQ,YAAY,eAC5EK,EAAO,eAAiB,yBAAKb,UAAU,0CACpC,uBAAGA,UAAU,iBACsB,aAA9Ba,EAAO,cAAcN,MAAuB,gCACd,cAA9BM,EAAO,cAAcN,MAAwB,iDACf,cAA9BM,EAAO,cAAcN,MAAwB,8BAGtD,2BAAOqB,KAAK,cAAcC,IAAKlB,EAC3BX,UAAU,mDAAmDQ,YAAY,gBAC7E,2BAAOoB,KAAK,YAAYC,IAAKlB,EAAS,CAAEmB,UAAU,EAAMC,UAAW,EAAGC,UAAW,KAC7EhC,UAAU,mDAAmDQ,YAAY,cAE5EK,EAAO,cAAgB,yBAAKb,UAAU,0CACnC,uBAAGA,UAAU,iBACqB,aAA7Ba,EAAO,aAAaN,MAAuB,+BACd,cAA7BM,EAAO,aAAaN,MAAwB,gDACf,cAA7BM,EAAO,aAAaN,MAAwB,+BAIzD,yBAAKP,UAAU,+GACX,2BAAO4B,KAAK,QAAQC,IAAKlB,EAAS,CAAEmB,UAAU,IAC1C9B,UAAU,0CAA0CO,KAAK,QAAQC,YAAY,UAChFK,EAAM,OAAa,yBAAKb,UAAU,0CAC/B,uBAAGA,UAAU,iBACiB,aAAzBa,EAAM,MAAUN,MAAuB,qBAGhD,2BAAOqB,KAAK,gBAAgBC,IAAKlB,EAAS,CAAEmB,UAAU,IAClD9B,UAAU,0CAA0CO,KAAK,QAAQC,YAAY,kBAChFK,EAAO,kBAAoB,yBAAKb,UAAU,0CACvC,uBAAGA,UAAU,iBACyB,aAAjCa,EAAO,iBAAiBN,MAAuB,wBAI5D,yBAAKP,UAAU,+GACX,2BAAO4B,KAAK,WAAWC,IAAKlB,EAAS,CAAEmB,UAAU,EAAMC,UAAW,EAAGC,UAAW,KAC5EhC,UAAU,0CAA0CO,KAAK,WAAWC,YAAY,aACnFK,EAAM,UAAgB,yBAAKb,UAAU,0CAClC,uBAAGA,UAAU,iBAAb,+CAEJ,2BAAO4B,KAAK,mBAAmBC,IAAKlB,EAAS,CAAEmB,UAAU,EAAMC,UAAW,EAAGC,UAAW,KACpFhC,UAAU,0CAA0CO,KAAK,WAAWC,YAAY,qBACnFK,EAAO,qBAAuB,yBAAKb,UAAU,0CAC1C,uBAAGA,UAAU,iBAAb,2BAGR,4BAAQO,KAAK,SAASP,UAAU,wEAAhC,eCvCNiC,EAAY,SAAC,GAAqB,IAAnBL,EAAkB,EAAlBA,KAAMM,EAAY,EAAZA,MACvB,OAAO,yBAAKlC,UAAU,wIAClB,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oHAAoH4B,IAExI,yBAAK5B,UAAU,4GACVkC,EAAMf,KAAI,SAAAgB,GAAI,OAAI,kBAAC,EAAD,eAAUb,IAAKa,EAAKC,IAAQD,UAKrDE,EAAW,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,KAAMU,EAAkB,EAAlBA,YACtB,OAAO,yBAAKtC,UAAU,mGAClB,0BAAMA,UAAU,6BAA4B,yBAAKA,UAAU,6BAA6BuC,IAAKD,KAC7F,kBAAC,IAAD,CAAMlC,GAAG,IAAIJ,UAAU,wFAAwF4B,KAIxGY,EAnDD,WAAO,IAAD,EACgBzB,oBAAS,GADzB,mBACT0B,EADS,KACEC,EADF,OAEU3B,mBAAS,IAFnB,mBAETmB,EAFS,KAEFS,EAFE,KAehB,OAXAC,qBAAU,WACNC,MAAM,eACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAAG,GACEA,EAAKC,UACLP,EAASM,EAAKzB,MACdkB,GAAW,SAIxB,IACI,kBAAC,IAAMS,SAAP,KACFV,EACG,yBAAKzC,UAAU,gDACX,wBAAIA,UAAU,uBAAd,eAG0B,IAA9BoD,OAAOC,KAAKnB,GAAOhB,OAAe,yBAAKlB,UAAU,iEAC7C,wBAAIA,UAAU,8CAAd,mCACK,yBAAKA,UAAU,+DAChB,wBAAIA,UAAU,gDAAd,gBACCoD,OAAOC,KAAKnB,GAAOf,KAAI,SAAAmC,GAAK,OAAI,kBAAC,EAAD,CAAWhC,IAAKgC,EAAO1B,KAAM0B,EAAOpB,MAAOA,EAAMoB,W,QCNhGC,EAAe,WAAO,IAAD,EAEexC,oBAAS,GAFxB,mBAEhByC,EAFgB,KAEDC,EAFC,KAIvB,OAAQ,yBAAKzD,UAAU,yCACnB,yBAAKA,UAAU,sDACX,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,mBAAvB,cACA,4BAAQA,UAAU,kBAAkB0D,QAJpB,kBAAMD,GAAcD,KAI0B,kBAAC,IAAD,CAAgBxD,UAAU,gBAG3FwD,EAAgB,yBAAKxD,UAAU,mDAC5B,kBAAC,IAAD,CAAMI,GAAG,UAAUJ,UAAU,yDAA7B,SACA,kBAAC,IAAD,CAAMI,GAAG,SAASJ,UAAU,uFAA5B,SACA,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAMI,GAAG,SAASJ,UAAU,oEAA5B,SACA,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,oEAA/B,cAEC,OAIF2D,EAvCA,WACX,OAAQ,yBAAK3D,UAAU,oGAEnB,kBAAC,EAAD,MAEA,yBAAKA,UAAU,yDACX,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,0CAAvB,cACA,uBAAG4D,KAAK,UAAU5D,UAAU,0CAA5B,SACA,kBAAC,IAAD,CAAMI,GAAG,SAASJ,UAAU,0CAA5B,SACA,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,0CAAvB,YAEJ,yBAAKA,UAAU,yDACX,kBAAC,IAAD,CAAMI,GAAG,SAASJ,UAAU,0CAA5B,SACA,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,0CAA/B,eCSG6D,E,uKAhBX,OAAO,yBAAK7D,UAAU,eACpB,kBAAC,EAAD,MACA,yBAAKA,UAAU,2DACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8D,KAAK,YAAYC,OAAK,GAAC,kBAAC,EAAD,OAC9B,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,GAAC,kBAAC,EAAD,OAC3B,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,GAAC,kBAAC,EAAD,OAC3B,kBAAC,IAAD,CAAOD,KAAK,KAAI,kBAAC,EAAD,c,GATRE,IAAMC,WCIJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,SAAS,kBAAC,EAAD,QAEXC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhC,MAAK,SAAAiC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxD,QAAQwD,MAAMA,EAAMC,c","file":"static/js/main.0d7df1d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return <div className=\"flex flex-col bg-blue-900 w-full h-full overflow-auto\">\r\n        <section className=\"w-full flex flex-col items-center justify-center bg-gray-900\">\r\n            <h1 className=\"text-teal-100 font-bold text-4xl text-center tracking-widest\">My Songify</h1>\r\n            <p className=\"max-w-xl text-white mt-10 bg-gray-800 px-10 py-3 text-center shadow-xl rounded-lg\">Amet anim aliqua amet laboris culpa deserunt ad id et magna voluptate voluptate. Culpa deserunt ad culpa labore sit ea cillum ullamco. Nisi consequat do ea sunt.\r\n  In amet duis mollit minim reprehenderit. Ex ad sint aliquip magna. </p>\r\n        </section>\r\n        <section className=\"flex flex-col md:flex-row items-center justify-around py-32 bg-gray-900\">\r\n            <div className=\"border-0 sm:border-r-4 border-teal-500 w-full md:w-1/3 md:px-8 md:py-2\">\r\n                <h2 className=\"px-3 py-2 md:py-0 md:px-0 text-center md:text-right font-bold uppercase text-white text-3xl sm:text-4xl\">Keep Track\r\n                    <br className=\"hidden md:block\" /> of the <br className=\"hidden md:block\" />\r\n                    <span className=\"text-teal-500\">Best Music</span> <br className=\"hidden md:block\" />in the <br className=\"hidden md:block\" />\r\n                    <span className=\"text-teal-500\">Industry</span>\r\n                </h2>\r\n            </div>\r\n            <div className=\"w-full md:w-2/3 md:h-full grid grid-rows-2 grid-cols-2 md:gap-4 md:px-8 md:py-2\">\r\n                <TopAlbumsCard />\r\n                <TopAlbumsCard />\r\n                <TopAlbumsCard />\r\n                <TopAlbumsCard />\r\n            </div>\r\n        </section>\r\n        <section className=\"flex flex-col items-center justify-center py-32 bg-gray-400\">\r\n            <h2 className=\"text-center font-semibold uppercase text-teal-700 text-3xl\">\r\n                Start Your Journey\r\n                     </h2>\r\n            <Link to=\"/register\"\r\n                className=\"mt-10 px-8 sm:px-10 md:px-24 py-4 text-xl bg-teal-700 text-teal-100 rounded shadow-xl hover:bg-teal-800\">\r\n                Register\r\n                 </Link>\r\n        </section>\r\n        <section id=\"about\" className=\"flex flex-col items-center bg-gray-900 py-24\">\r\n            <h2 className=\"text-center text-teal-100 tracking-wider border-b-2 border-teal-500  pb-3 font-semibold uppercase text-white text-3xl\">\r\n                About this Project\r\n                     </h2>\r\n            <p className=\"mt-5 md:mt-8 bg-gray-800 px-4 sm:px-8 md:px-10 py-3  text-white rounded-lg shadow-lg\">\r\n                This project has been created to test the insides <br className=\"hidden sm:block\" />\r\n                     of websites like Tidal and Spotify which are <br className=\"hidden sm:block\" />\r\n                     used for listening to songs.\r\n                     </p>\r\n        </section>\r\n\r\n    </div >\r\n    //     return <div className=\"bg-blue-800\">\r\n    //         <section className=\"flex flex-col items-center justify-center px-10 py-2 bg-gray-900 mt-5\">\r\n    //             <h1 className=\"text-teal-100 font-bold text-4xl text-center tracking-widest\">My Songify</h1>\r\n    //             <p className=\"max-w-xl text-white mt-10 bg-gray-800 px-10 py-3 text-center shadow-xl rounded-lg\">Amet anim aliqua amet laboris culpa deserunt ad id et magna voluptate voluptate. Culpa deserunt ad culpa labore sit ea cillum ullamco. Nisi consequat do ea sunt.\r\n    // In amet duis mollit minim reprehenderit. Ex ad sint aliquip magna. </p>\r\n    //         </section>\r\n    //         <section className=\"flex flex-col md:flex-row items-center justify-around py-32 bg-gray-900\">\r\n    //             <div className=\"border-0 sm:border-r-4 border-teal-500 w-full md:w-1/3 md:px-8 md:py-2\">\r\n    //                 <h2 className=\"px-3 py-2 md:py-0 md:px-0 text-center md:text-right font-bold uppercase text-white text-3xl sm:text-4xl\">Keep Track\r\n    //                 <br className=\"hidden md:block\" /> of the <br className=\"hidden md:block\" />\r\n    //                     <span className=\"text-teal-500\">Best Music</span> <br className=\"hidden md:block\" />in the <br className=\"hidden md:block\" />\r\n    //                     <span className=\"text-teal-500\">Industry</span>\r\n    //                 </h2>\r\n    //             </div>\r\n    //             <div className=\"w-full md:w-2/3 md:h-full grid grid-rows-2 grid-cols-2 md:gap-4 md:px-8 md:py-2\">\r\n    //                 <TopAlbumsCard />\r\n    //                 <TopAlbumsCard />\r\n    //                 <TopAlbumsCard />\r\n    //                 <TopAlbumsCard />\r\n    //             </div>\r\n    //         </section>\r\n    //         <section className=\"flex flex-col items-center justify-center py-32 bg-gray-400\">\r\n    //             <h2 className=\"text-center font-semibold uppercase text-teal-700 text-3xl\">\r\n    //                 Start Your Journey\r\n    //                 </h2>\r\n    //             <Link to=\"/register\"\r\n    //                 className=\"mt-10 px-8 sm:px-10 md:px-24 py-4 text-xl bg-teal-700 text-teal-100 rounded shadow-xl hover:bg-teal-800\">\r\n    //                 Register\r\n    //             </Link>\r\n    //         </section>\r\n    //         <section id=\"about\" className=\"flex flex-col items-center bg-gray-900 py-24\">\r\n    //             <h2 className=\"text-center text-teal-100 tracking-wider border-b-2 border-teal-500  pb-3 font-semibold uppercase text-white text-3xl\">\r\n    //                 About this Project\r\n    //                 </h2>\r\n    //             <p className=\"mt-5 md:mt-8 bg-gray-800 px-4 sm:px-8 md:px-10 py-3  text-white rounded-lg shadow-lg\">\r\n    //                 This project has been created to test the insides <br className=\"hidden sm:block\" />\r\n    //                 of websites like Tidal and Spotify which are <br className=\"hidden sm:block\" />\r\n    //                 used for listening to songs.\r\n    //                 </p>\r\n    //         </section>\r\n    //     </div>\r\n}\r\n\r\nconst TopAlbumsCard = () => {\r\n    return <div className=\"row-span-1 flex flex-col w-32 h-32 bg-gray-700  rounded-lg shadow-lg overflow-hidden\">\r\n        <div style={{ height: '75%' }} className=\"w-full bg-gray-800\"></div>\r\n        <div className=\"inline-flex items-center space-x-2 text-gray-200 px-3 py-2\"><span>Like</span> <span>1K</span></div>\r\n    </div>\r\n}\r\n\r\nexport default Home; ","import React from 'react';\r\n\r\nconst Login = () => {\r\n    return (<div className=\"flex flex-col items-center justify-center w-full h-full px-4 sm:py-8 space-y-3 sm:space-y-4 md:space-y-8 max-w-lg mx-auto\">\r\n        <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n            <input className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"email\" placeholder=\"Email\" />\r\n        </div>\r\n        <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n            <input className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"password\" placeholder=\"Password\" />\r\n        </div>\r\n        <button className=\"block bg-teal-700 text-white rounded-lg shadow-lg text-md px-10 py-3\">Login</button>\r\n    </div>);\r\n}\r\n\r\nexport default Login; ","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Register = () => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const [globalErrors, setGlobalErrors] = useState([]);\r\n    const onSubmit = data => {\r\n        if (data['confirm-email'] !== data['email']) {\r\n            globalErrors.push('Emails are not Equal')\r\n            setGlobalErrors(globalErrors)\r\n        }\r\n        if (data['password'] !== data['confirm-password']) {\r\n            globalErrors.push('Passwords are not equal')\r\n            setGlobalErrors(globalErrors)\r\n        }\r\n        console.log(data);\r\n    }\r\n\r\n    return (<div className=\"flex flex-col items-center justify-center w-full h-full\">\r\n        {globalErrors.length > 0 && <div className=\"text-white bg-red-800 px-2 py-1 w-full rounded-lg\">\r\n            {globalErrors.map((el, i) => <div key={i}>{el}</div>)}\r\n        </div>\r\n        }\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col items-center justify-center space-y-2 mt-5 w-full h-full px-3 sm:px-10\">\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input name=\"first-name\" ref={register({ required: true, minLength: 3, maxLength: 64 })}\r\n                    className=\"w-full sm:w-1/3 bg-teal-100 px-3 py-2 rounded-lg\" placeholder=\"First Name\" />\r\n                {errors['first-name'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['first-name'].type === 'required' && 'You must type your first name'}\r\n                        {errors['first-name'].type === 'minLength' && 'Minimum length of first name must be 3 or more'}\r\n                        {errors['first-name'].type === 'maxLength' && 'Max first name must be 64'}\r\n                    </p>\r\n                </div>}\r\n                <input name=\"middle-name\" ref={register}\r\n                    className=\"w-full sm:w-1/3 bg-teal-100 px-3 py-2 rounded-lg\" placeholder=\"Middle Name\" />\r\n                <input name=\"last-name\" ref={register({ required: true, minLength: 3, maxLength: 64 })}\r\n                    className=\"w-full sm:w-1/3 bg-teal-100 px-3 py-2 rounded-lg\" placeholder=\"Last Name\"\r\n                />\r\n                {errors['last-name'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['last-name'].type === 'required' && 'You must type your last name'}\r\n                        {errors['last-name'].type === 'minLength' && 'Minimum length of last name must be 3 or more'}\r\n                        {errors['last-name'].type === 'maxLength' && 'Max first name must be 64'}\r\n                    </p>\r\n                </div>}\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input name=\"email\" ref={register({ required: true })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"email\" placeholder=\"Email\" />\r\n                {errors['email'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['email'].type === 'required' && 'Type your email.'}\r\n                    </p>\r\n                </div>}\r\n                <input name=\"confirm-email\" ref={register({ required: true })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"email\" placeholder=\"Confirm Email\" />\r\n                {errors['confirm-email'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['confirm-email'].type === 'required' && 'Retype your email.'}\r\n                    </p>\r\n                </div>}\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input name=\"password\" ref={register({ required: true, minLength: 5, maxLength: 20 })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"password\" placeholder=\"Password\" />\r\n                {errors['password'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">Password is required with min length of 5.</p>\r\n                </div>}\r\n                <input name=\"confirm-password\" ref={register({ required: true, minLength: 5, maxLength: 20 })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"password\" placeholder=\"Confirm Password\" />\r\n                {errors['confirm-password'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">Passwords must match.</p>\r\n                </div>}\r\n            </div>\r\n            <button type=\"submit\" className=\"block bg-teal-700 text-white rounded-lg shadow-lg text-md px-10 py-3\">Register</button>\r\n        </form></div>);\r\n}\r\n\r\nexport default Register; ","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Songs = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [songs, setSongs] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch('/songs/list')\r\n            .then((res) => res.json())\r\n            .then(resp => {\r\n                if (resp.success) {\r\n                    setSongs(resp.data)\r\n                    setLoading(false)\r\n                }\r\n            })\r\n\r\n    }, [])\r\n    return <React.Fragment>\r\n        {isLoading ?\r\n            <div className=\"px-24 py-10 bg-teal-900 rounded-lg shadow-xl\">\r\n                <h1 className=\"text-white text-4xl\">Loading...</h1>\r\n            </div>\r\n            :\r\n            Object.keys(songs).length === 0 ? <div className=\"px-10 py-5 sm:px-24 sm:py-10 bg-teal-900 rounded-lg shadow-xl\">\r\n                <h1 className=\"text-white text-lg sm:text-3xl md:text-4xl\">No songs in database, add some</h1>\r\n            </div> : <div className=\"flex flex-col h-full w-full pb-24 bg-gray-900 overflow-auto\">\r\n                    <h1 className=\"text-4xl text-teal-100 font-bold text-center\">Recent Songs</h1>\r\n                    {Object.keys(songs).map(genre => <SongGenre key={genre} name={genre} songs={songs[genre]} />)}\r\n                </div>\r\n\r\n\r\n        }\r\n    </React.Fragment>\r\n}\r\n\r\nconst SongGenre = ({ name, songs }) => {\r\n    return <div className=\"flex flex-col w-full md:max-w-4xl mx-auto items-center justify-center mt-24 sm:px-2 py-2 sm:py-5 sm:rounded-lg bg-teal-900 shadow-xl\">\r\n        <div className=\"-my-6 relative z-10\">\r\n            <span className=\"px-5 rounded-lg shadow-xl py-3 text-white font-semibold text-xl sm:text-2xl bg-teal-800 tracking-wider uppercase\">{name}</span>\r\n        </div>\r\n        <div className=\"flex items-center justify-around space-x-5 py-2 px-0 mt-10 h-64 w-full overflow-x-auto overflow-y-hidden\">\r\n            {songs.map(song => <SongCard key={song.pk} {...song} />)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst SongCard = ({ name, cover_image }) => {\r\n    return <div className=\"flex flex-col items-center justify-around bg-teal-700 rounded-lg shadow-xl max-w-2xl text-white\">\r\n        <span className=\"w-32 h-32 overflow-hidden\"><img className=\"w-full h-full object-cover\" src={cover_image} /></span>\r\n        <Link to=\"#\" className=\"w-full text-center font-semibold text-lg text-gray-100 hover:text-teal-200 px-3 py-1\">{name}</Link>\r\n    </div>\r\n}\r\n\r\nexport default Songs; ","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Icons from 'heroicons-react';\r\n\r\nconst Navbar = () => {\r\n    return (<nav className=\"flex items-center justify-between shadow-xl w-full h-full sm:py-2 sm:px-3 bg-teal-900 text-white\">\r\n        {/* mobile screen havbar */}\r\n        <MobileNavbar />\r\n        {/* small screen and above navbar */}\r\n        <div className=\"hidden sm:flex items-center justify-between space-x-3\">\r\n            <Link to=\"/\" className=\"px-3 py-2 rounded-lg hover:bg-teal-800\">my-songify</Link>\r\n            <a href=\"/#about\" className=\"px-3 py-2 rounded-lg hover:bg-teal-800\">About</a>\r\n            <Link to='/songs' className=\"px-3 py-2 rounded-lg hover:bg-teal-800\">Songs</Link>\r\n            <Link to=\"#\" className=\"px-3 py-2 rounded-lg hover:bg-teal-800\">Actions</Link>\r\n        </div>\r\n        <div className=\"hidden sm:flex items-center justify-between space-x-3\">\r\n            <Link to=\"/login\" className=\"hover:bg-teal-800 px-3 py-2 rounded-lg\">Login</Link>\r\n            <Link to=\"/register\" className=\"hover:bg-teal-800 px-3 py-2 rounded-lg\">Register</Link>\r\n        </div>\r\n    </nav>)\r\n}\r\n\r\nconst MobileNavbar = () => {\r\n\r\n    const [showMenuItems, setMenuItems] = useState(false);\r\n    const handleMenuItems = () => setMenuItems(!showMenuItems);\r\n    return (<div className=\"sm:hidden flex flex-col w-full h-full\">\r\n        <div className=\"flex items-center w-full justify-between shadow-lg\">\r\n            <Link to=\"/\" className=\"block px-3 py-2\">my-songify</Link>\r\n            <button className=\"block px-3 py-2\" onClick={handleMenuItems}><Icons.MenuAlt4 className=\"w-10 h-10\" /></button>\r\n        </div>\r\n        {/* menu items */}\r\n        {showMenuItems ? <div className=\"flex flex-col space-y-2 w-full bg-teal-800 py-5\">\r\n            <Link to=\"/#about\" className=\"px-5 py-1 border-l-0 hover:border-l-2 border-teal-500\">About</Link>\r\n            <Link to=\"/songs\" className=\"pb-2 border-b border-teal-700 px-5 py-1 border-l-0 hover:border-l-2 border-teal-500\">Songs</Link>\r\n            <div className=\"flex flex-col\">\r\n                <Link to=\"/login\" className=\"rounded-lg px-5 py-1 border-l-0 hover:border-l-2 border-teal-500\">Login</Link>\r\n                <Link to=\"/register\" className=\"rounded-lg px-5 py-1 border-l-0 hover:border-l-2 border-teal-500\">Register</Link>\r\n            </div>\r\n        </div> : null}\r\n    </div>)\r\n}\r\n\r\nexport default Navbar; ","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Songs from './pages/Songs';\nimport Navbar from './components/Navbar';\n\nclass App extends React.Component {\n  render() {\n    return <div className=\"bg-gray-900\">\n      <Navbar />\n      <div className=\"flex items-center justify-center w-full overflow-hidden\">\n        <Switch>\n          <Route path=\"/register\" exact><Register /></Route>\n          <Route path=\"/login\" exact><Login /></Route>\n          <Route path=\"/songs\" exact><Songs /></Route>\n          <Route path=\"/\"><Home /></Route>\n        </Switch>\n      </div>\n    </div>\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/output.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <Router> <App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}