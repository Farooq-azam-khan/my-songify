{"version":3,"sources":["pages/Home.js","store/actions/userActions.js","store/actions/types.js","pages/Login.js","pages/Register.js","pages/Songs.js","components/UserCreatedPlaylists.js","pages/Profile.js","components/Navbar.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["TopAlbumsCard","className","style","height","Home","to","id","loginAction","email","password","dispatch","type","fetch","method","headers","body","JSON","stringify","then","resp","json","data","success","payload","user","catch","err","logoutAction","connect","useForm","handleSubmit","register","watch","errors","useState","setEmail","setPassword","loggedIn","onSubmit","value","onChange","e","target","placeholder","registerAction","reg_data","name","ref","required","minLength","maxLength","firstname","SongFormModalComponent","close","getGenre","setGenre","loadingGenre","setLoadingGenre","useEffect","console","log","onClick","song_data","is_authenticated","map","el","key","pk","SongGenre","songs","song","SongCard","cover_image","src","isLoading","setLoading","songFormModal","setSongFormModal","setSongs","handleSongFormModal","res","Object","keys","length","genre","PlaylistCard","display_status","alt","CreatePlaylistModal","statuses","loadingStatus","send_data","status","htmlFor","_","setStatuses","setLoadingStatus","userPlaylists","setUserPlaylists","loadingUserPlaylist","setLoadingUserPlaylist","userPlaylistModal","setUserPlaylistModal","handleUserPlaylistModal","lastname","props","mobileMenu","setMobileMenu","showActionDropdown","setShowActionDropdown","handleLogout","handleEsc","event","keyCode","window","addEventListener","removeEventListener","href","activeClassName","tabIndex","initialState","middlename","is_admin","userReducer","state","action","rootReducer","combineReducers","persistedState","thunk","serializedState","localStorage","getItem","parse","loadFromLocalStorage","store","createStore","applyMiddleware","subscribe","setItem","saveToLocalStorage","getState","App","path","exact","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.209f556d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return <div className=\"flex flex-col bg-blue-900 w-full h-full overflow-auto\">\r\n        <section className=\"w-full flex flex-col items-center justify-center bg-gray-900\">\r\n            <h1 className=\"text-teal-100 font-bold text-4xl text-center tracking-widest\">My Songify</h1>\r\n            <p className=\"max-w-xl text-white mt-10 bg-gray-800 px-10 py-3 text-center shadow-xl rounded-lg\">Amet anim aliqua amet laboris culpa deserunt ad id et magna voluptate voluptate. Culpa deserunt ad culpa labore sit ea cillum ullamco. Nisi consequat do ea sunt.\r\n  In amet duis mollit minim reprehenderit. Ex ad sint aliquip magna. </p>\r\n        </section>\r\n        <section className=\"flex flex-col md:flex-row items-center justify-around py-32 bg-gray-900\">\r\n            <div className=\"border-0 sm:border-r-4 border-teal-500 w-full md:w-1/3 md:px-8 md:py-2\">\r\n                <h2 className=\"px-3 py-2 md:py-0 md:px-0 text-center md:text-right font-bold uppercase text-white text-3xl sm:text-4xl\">Keep Track\r\n                    <br className=\"hidden md:block\" /> of the <br className=\"hidden md:block\" />\r\n                    <span className=\"text-teal-500\">Best Music</span> <br className=\"hidden md:block\" />in the <br className=\"hidden md:block\" />\r\n                    <span className=\"text-teal-500\">Industry</span>\r\n                </h2>\r\n            </div>\r\n            <div className=\"w-full md:w-2/3 md:h-full grid grid-rows-2 grid-cols-2 md:gap-4 md:px-8 md:py-2\">\r\n                <TopAlbumsCard />\r\n                <TopAlbumsCard />\r\n                <TopAlbumsCard />\r\n                <TopAlbumsCard />\r\n            </div>\r\n        </section>\r\n        <section className=\"flex flex-col items-center justify-center py-32 bg-gray-400\">\r\n            <h2 className=\"text-center font-semibold uppercase text-teal-700 text-3xl\">\r\n                Start Your Journey\r\n                     </h2>\r\n            <Link to=\"/register\"\r\n                className=\"mt-10 px-8 sm:px-10 md:px-24 py-4 text-xl bg-teal-700 text-teal-100 rounded shadow-xl hover:bg-teal-800\">\r\n                Register\r\n                 </Link>\r\n        </section>\r\n        <section id=\"about\" className=\"flex flex-col items-center bg-gray-900 py-24\">\r\n            <h2 className=\"text-center text-teal-100 tracking-wider border-b-2 border-teal-500  pb-3 font-semibold uppercase text-white text-3xl\">\r\n                About this Project\r\n                     </h2>\r\n            <p className=\"mt-5 md:mt-8 bg-gray-800 px-4 sm:px-8 md:px-10 py-3  text-white rounded-lg shadow-lg\">\r\n                This project has been created to test the insides <br className=\"hidden sm:block\" />\r\n                     of websites like Tidal and Spotify which are <br className=\"hidden sm:block\" />\r\n                     used for listening to songs.\r\n                     </p>\r\n        </section>\r\n\r\n    </div >\r\n    //     return <div className=\"bg-blue-800\">\r\n    //         <section className=\"flex flex-col items-center justify-center px-10 py-2 bg-gray-900 mt-5\">\r\n    //             <h1 className=\"text-teal-100 font-bold text-4xl text-center tracking-widest\">My Songify</h1>\r\n    //             <p className=\"max-w-xl text-white mt-10 bg-gray-800 px-10 py-3 text-center shadow-xl rounded-lg\">Amet anim aliqua amet laboris culpa deserunt ad id et magna voluptate voluptate. Culpa deserunt ad culpa labore sit ea cillum ullamco. Nisi consequat do ea sunt.\r\n    // In amet duis mollit minim reprehenderit. Ex ad sint aliquip magna. </p>\r\n    //         </section>\r\n    //         <section className=\"flex flex-col md:flex-row items-center justify-around py-32 bg-gray-900\">\r\n    //             <div className=\"border-0 sm:border-r-4 border-teal-500 w-full md:w-1/3 md:px-8 md:py-2\">\r\n    //                 <h2 className=\"px-3 py-2 md:py-0 md:px-0 text-center md:text-right font-bold uppercase text-white text-3xl sm:text-4xl\">Keep Track\r\n    //                 <br className=\"hidden md:block\" /> of the <br className=\"hidden md:block\" />\r\n    //                     <span className=\"text-teal-500\">Best Music</span> <br className=\"hidden md:block\" />in the <br className=\"hidden md:block\" />\r\n    //                     <span className=\"text-teal-500\">Industry</span>\r\n    //                 </h2>\r\n    //             </div>\r\n    //             <div className=\"w-full md:w-2/3 md:h-full grid grid-rows-2 grid-cols-2 md:gap-4 md:px-8 md:py-2\">\r\n    //                 <TopAlbumsCard />\r\n    //                 <TopAlbumsCard />\r\n    //                 <TopAlbumsCard />\r\n    //                 <TopAlbumsCard />\r\n    //             </div>\r\n    //         </section>\r\n    //         <section className=\"flex flex-col items-center justify-center py-32 bg-gray-400\">\r\n    //             <h2 className=\"text-center font-semibold uppercase text-teal-700 text-3xl\">\r\n    //                 Start Your Journey\r\n    //                 </h2>\r\n    //             <Link to=\"/register\"\r\n    //                 className=\"mt-10 px-8 sm:px-10 md:px-24 py-4 text-xl bg-teal-700 text-teal-100 rounded shadow-xl hover:bg-teal-800\">\r\n    //                 Register\r\n    //             </Link>\r\n    //         </section>\r\n    //         <section id=\"about\" className=\"flex flex-col items-center bg-gray-900 py-24\">\r\n    //             <h2 className=\"text-center text-teal-100 tracking-wider border-b-2 border-teal-500  pb-3 font-semibold uppercase text-white text-3xl\">\r\n    //                 About this Project\r\n    //                 </h2>\r\n    //             <p className=\"mt-5 md:mt-8 bg-gray-800 px-4 sm:px-8 md:px-10 py-3  text-white rounded-lg shadow-lg\">\r\n    //                 This project has been created to test the insides <br className=\"hidden sm:block\" />\r\n    //                 of websites like Tidal and Spotify which are <br className=\"hidden sm:block\" />\r\n    //                 used for listening to songs.\r\n    //                 </p>\r\n    //         </section>\r\n    //     </div>\r\n}\r\n\r\nconst TopAlbumsCard = () => {\r\n    return <div className=\"row-span-1 flex flex-col w-32 h-32 bg-gray-700  rounded-lg shadow-lg overflow-hidden\">\r\n        <div style={{ height: '75%' }} className=\"w-full bg-gray-800\"></div>\r\n        <div className=\"inline-flex items-center space-x-2 text-gray-200 px-3 py-2\"><span>Like</span> <span>1K</span></div>\r\n    </div>\r\n}\r\n\r\nexport default Home; ","import {\r\n    LOGIN_SENT, LOGIN_SUCCESS, LOGIN_FAILURE,\r\n    LOGOUT_SENT, LOGOUT_SUCCESS, LOGOUT_FAILURE,\r\n    REGISTER_SENT, REGISTER_SUCCESS, REGISTER_FAILURE\r\n} from './types';\r\n\r\nexport const loginAction = (email, password) => dispatch => {\r\n    dispatch({ type: LOGIN_SENT })\r\n    fetch('/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email, password\r\n        })\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            if (data.success) {\r\n                dispatch({ type: LOGIN_SUCCESS, payload: data.user })\r\n            } else {\r\n                dispatch({ type: LOGIN_FAILURE, payload: data })\r\n            }\r\n        }).catch(err => {\r\n            dispatch({ type: LOGIN_FAILURE, payload: err })\r\n        })\r\n}\r\n\r\nexport const registerAction = (reg_data) => dispatch => {\r\n    // console.log('regiser action')\r\n    // console.log({ registerdata: reg_data })\r\n    dispatch({ type: REGISTER_SENT })\r\n    fetch('/users/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(reg_data)\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            // console.log(data)\r\n            if (data.success) {\r\n                dispatch({ type: REGISTER_SUCCESS, payload: data })\r\n            } else {\r\n                dispatch({ type: REGISTER_FAILURE })\r\n            }\r\n        }).catch(err => {\r\n            dispatch({ type: REGISTER_FAILURE, payload: err })\r\n        })\r\n}\r\n\r\nexport const logoutAction = () => dispatch => {\r\n    dispatch({ type: LOGOUT_SENT })\r\n    fetch('/users/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({})\r\n    })\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            // console.log('logout action', data)\r\n            dispatch({ type: LOGOUT_SUCCESS, payload: data })\r\n        }).catch(err => {\r\n            dispatch({ type: LOGOUT_FAILURE })\r\n        })\r\n}","export const LOGIN_SENT = 'LOGIN_SENT'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_SENT = 'LOGOUT_SENT';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const REGISTER_SENT = 'REGISTER_SENT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loginAction } from '../store/actions/userActions'\r\n\r\nconst Login = ({ user, loginAction }) => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n        loginAction(email, password)\r\n\r\n    }\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    if (user.loggedIn) {\r\n        return (<div className=\"fixed z-10 inset-0 flex items-center justify-center bg-gray-900 h-full\">\r\n            <h1 className=\"text-white text-4xl bg-teal-900 px-24 py-10 rounded-lg shadow-xl\">You are already logged in</h1>\r\n        </div>)\r\n    }\r\n\r\n    return (<div className=\"fixed z-10 inset-0 flex flex-col items-center justify-center w-full h-full bg-gray-900\">\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col items-center justify-center max-w-xl mx-auto  space-y-2 mt-5 w-full h-full px-3 sm:px-10\">\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input value={email} onChange={handleEmail} className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"email\" placeholder=\"Email\" />\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input value={password} onChange={handlePassword} className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"password\" placeholder=\"Password\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"block bg-teal-700 text-white rounded-lg shadow-lg text-md px-10 py-3\">Login</button>\r\n        </form>\r\n    </div>);\r\n}\r\n\r\nLogin.propTypes = {\r\n    user: PropTypes.object,\r\n    loginAction: PropTypes.func.isRequired\r\n}\r\n\r\n// TODO: test ({user} ) => user\r\nconst mapStateToProps = ({ user }) => ({ user })\r\n\r\nexport default connect(mapStateToProps, { loginAction })(Login); ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { registerAction } from '../store/actions/userActions';\r\n\r\nconst Register = ({ user, registerAction }) => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => {\r\n        registerAction(data);\r\n    }\r\n    if (user.loggedIn) {\r\n        return (<div className=\"px-24 py-10 bg-teal-900 rounded-lg shadow-xl\">\r\n            <h1 className=\"text-white text-4xl\">You are already logged in</h1>\r\n        </div>)\r\n    }\r\n\r\n    return (<div className=\"fixed z-10 inset-0 flex flex-col items-center justify-center w-full h-full bg-gray-900\">\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col items-center justify-center mx-auto max-w-3xl space-y-2 mt-5 w-full h-full px-3 sm:px-10\">\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input name=\"firstname\" ref={register({ required: true, minLength: 3, maxLength: 64 })}\r\n                    className=\"w-full sm:w-1/3 bg-teal-100 px-3 py-2 rounded-lg\" placeholder=\"First Name\" />\r\n                {errors['firstname'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors.firstname.type === 'required' && 'You must type your first name'}\r\n                        {errors.firstname.type === 'minLength' && 'Minimum length of first name must be 3 or more'}\r\n                        {errors.firstname.type === 'maxLength' && 'Max first name must be 64'}\r\n                    </p>\r\n                </div>}\r\n                <input name=\"middlename\" ref={register}\r\n                    className=\"w-full sm:w-1/3 bg-teal-100 px-3 py-2 rounded-lg\" placeholder=\"Middle Name\" />\r\n                <input name=\"lastname\" ref={register({ required: true, minLength: 3, maxLength: 64 })}\r\n                    className=\"w-full sm:w-1/3 bg-teal-100 px-3 py-2 rounded-lg\" placeholder=\"Last Name\"\r\n                />\r\n                {errors['lastname'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['lastname'].type === 'required' && 'You must type your last name'}\r\n                        {errors['lastname'].type === 'minLength' && 'Minimum length of last name must be 3 or more'}\r\n                        {errors['lastname'].type === 'maxLength' && 'Max first name must be 64'}\r\n                    </p>\r\n                </div>}\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input name=\"email\" ref={register({ required: true })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"email\" placeholder=\"Email\" />\r\n                {errors['email'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['email'].type === 'required' && 'Type your email.'}\r\n                    </p>\r\n                </div>}\r\n                <input name=\"confirm_email\" ref={register({ required: true })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"email\" placeholder=\"Confirm Email\" />\r\n                {errors['confirm_email'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">\r\n                        {errors['confirm_email'].type === 'required' && 'Retype your email.'}\r\n                    </p>\r\n                </div>}\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row space-x-0 space-y-1 sm:space-y-0 items-center w-full sm:space-x-4 justify-between\">\r\n                <input name=\"password\" ref={register({ required: true, minLength: 5, maxLength: 20 })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"password\" placeholder=\"Password\" />\r\n                {errors['password'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">Password is required with min length of 5.</p>\r\n                </div>}\r\n                <input name=\"confirm_password\" ref={register({ required: true, minLength: 5, maxLength: 20 })}\r\n                    className=\"w-full bg-teal-100 px-3 py-2 rounded-lg\" type=\"password\" placeholder=\"Confirm Password\" />\r\n                {errors['confirm_password'] && <div className=\"bg-red-300 w-full px-3 py-2 rounded-lg\">\r\n                    <p className=\"text-gray-900\">Passwords must match.</p>\r\n                </div>}\r\n            </div>\r\n            <button type=\"submit\" className=\"block bg-teal-700 text-white rounded-lg shadow-lg text-md px-10 py-3\">Register</button>\r\n        </form></div>);\r\n}\r\n\r\nRegister.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    registerAction: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({ user });\r\n\r\nexport default connect(mapStateToProps, { registerAction })(Register); ","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport * as Icons from 'heroicons-react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loginAction, logoutAction } from '../store/actions/userActions';\r\n\r\nconst Songs = ({ loginAction }) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [songFormModal, setSongFormModal] = useState(false);\r\n    const [songs, setSongs] = useState({});\r\n\r\n    const handleSongFormModal = () => {\r\n        setSongFormModal(!songFormModal);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('/songs/list')\r\n            .then((res) => res.json())\r\n            .then(resp => {\r\n                if (resp.success) {\r\n                    setSongs(resp.data)\r\n                    setLoading(false)\r\n                }\r\n            })\r\n\r\n    }, [])\r\n    return <>\r\n        {isLoading ?\r\n            (<div className=\"fixed z-10 inset-0 flex items-center justify-center bg-gray-900 h-full\">\r\n                <h1 className=\"text-white text-2xl bg-teal-900 px-10 py-8 rounded-lg shadow-lg\">Loading Songs...</h1>\r\n            </div>)\r\n            :\r\n            Object.keys(songs).length === 0 ? <>\r\n                <div className=\"fixed z-10 inset-0 flex items-center justify-center bg-gray-900 h-full\">\r\n                    <span className=\"flex flex-col items-center justify-center space-y-10 px-24 py-32 bg-blue-900 rounded-lg shadow-lg\">\r\n                        <div>\r\n                            <button onClick={handleSongFormModal} className=\"inline-flex items-center space-x-3 bg-orange-700 text-lg font-semibold rounded-full shadow-lg px-4 py-3 text-white\">\r\n                                <span><Icons.PlusOutline className=\"w-8 h-8 text-gray-300\" /></span><span>Songs</span>\r\n                            </button>\r\n                        </div>\r\n                        <div><p className=\"text-white text-xl \">No songs in database, add some</p></div>\r\n                    </span>\r\n                </div>\r\n            </> : <><div className=\"flex flex-col h-full w-full mt-10 pb-24 bg-gray-900 overflow-auto\">\r\n                <div className=\"flex items-center justify-between px-10 w-full\">\r\n                    <div className=\"w-2/3 h-full flex items-center justify-center\">\r\n                        <h1 className=\"text-4xl text-teal-100 font-bold text-center\">Recent Songs</h1>\r\n                    </div>\r\n                    <div className=\"w-1/3 h-full flex items-center justify-end\">\r\n                        <button onClick={handleSongFormModal} className=\"inline-flex items-center space-x-1 bg-orange-700 text-md font-semibold rounded-full shadow-md px-3 py-2 text-white\">\r\n                            <span><Icons.PlusOutline className=\"w-5 h-5 text-gray-300\" /></span><span>Songs</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {Object.keys(songs).map(genre => <SongGenre key={genre} name={genre} songs={songs[genre]} />)}\r\n            </div></>\r\n\r\n        }\r\n\r\n        {/* song form modal */}\r\n        {songFormModal && <SongFormModalComponent loginAction={loginAction} close={setSongFormModal} />}\r\n    </>\r\n}\r\n\r\nconst SongFormModalComponent = ({ loginAction, close }) => {\r\n    const [getGenre, setGenre] = useState([])\r\n    const [loadingGenre, setLoadingGenre] = useState(true)\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    useEffect(() => {\r\n        fetch('/api/v1/genere/all')\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                console.log('data: ', data)\r\n                setGenre(data);\r\n                setLoadingGenre(false);\r\n            })\r\n    }, [])\r\n    const onSubmit = song_data => {\r\n        console.log(song_data)\r\n        fetch('/api/v1/songs/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(song_data)\r\n        }).then(resp => resp.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.success) {\r\n                    close(false)\r\n                } else {\r\n                    if (!data.is_authenticated) {\r\n                        logoutAction()\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return (<div className=\"fixed inset-0 z-30 flex items-center justify-center w-full h-full\">\r\n        <button onClick={() => close(false)}\r\n            className=\"cursor-default fixed w-full h-full inset-0 bg-black opacity-50\" />\r\n        <form onSubmit={handleSubmit(onSubmit)}\r\n            className=\"relative z-40 flex flex-col space-y-10 items-start justify-center p-10 shadow-xl rounded-lg bg-orange-700\"\r\n        >\r\n            {loadingGenre ? <div className=\"text-white text-md\">Loading Form</div> : <>\r\n                <div className=\"space-x-1\">\r\n                    <input ref={register({ required: true })} name=\"name\" type=\"text\" placeholder=\"Song name\" className=\"bg-gray-100 rounded-lg px-10 py-3\" />\r\n                    {errors.name && <div className=\"bg-red-200 text-gray-900 w-full px-3 py-2 rounded-lg\">Name of the song is required.</div>}\r\n                </div>\r\n                <input ref={register} name=\"cover_image\" type=\"text\" placeholder=\"Song Cover Image URL\" className=\"bg-gray-100 rounded-lg px-10 py-3\" />\r\n                <input ref={register} name=\"mp3_file\" type=\"text\" placeholder=\"Mp3 File URL\" className=\"bg-gray-100 rounded-lg px-10 py-3\" />\r\n                <select ref={register} name=\"genre\" type=\"text\" placeholder=\"Song Genre\" className=\"bg-gray-100 rounded-lg px-8 py-3\">\r\n                    {getGenre.map(el => <option key={el.pk} value={el.pk}>{el.name}</option>)}\r\n                </select>\r\n                <button type=\"submit\" className=\"inline-flex items-center justify-between space-x-1 text-white bg-blue-800 hover:bg-blue-700 rounded-lg shadow-md px-4 py-3\"><span><Icons.Plus className=\"w-5 h-5\" /></span><span>Song</span></button>\r\n            </>}\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nconst SongGenre = ({ name, songs }) => {\r\n    return <div className=\"flex flex-col w-full md:max-w-4xl mx-auto items-center justify-center mt-24 sm:px-2 py-2 sm:py-5 sm:rounded-lg bg-blue-900 shadow-xl\">\r\n        <div className=\"-my-6 relative z-10\">\r\n            <span className=\"px-5 rounded-lg shadow-xl py-3 text-white font-semibold text-xl sm:text-2xl bg-indigo-700 tracking-wider uppercase\">{name}</span>\r\n        </div>\r\n        <div className=\"flex items-center justify-around space-x-5 py-2 px-0 mt-10 h-64 w-full overflow-x-auto overflow-y-hidden\">\r\n            {songs.map(song => <SongCard key={song.pk} {...song} />)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst SongCard = ({ name, cover_image }) => {\r\n    return <div className=\"flex flex-col items-center justify-around bg-indigo-700 rounded-lg shadow-xl max-w-2xl text-white\">\r\n        <span className=\"w-32 h-32 overflow-hidden\"><img className=\"w-full h-full object-cover\" src={cover_image} /></span>\r\n        <Link to=\"#\" className=\"text-center font-semibold text-lg truncate text-gray-100 hover:text-gray-200 px-3 py-1\">{name}</Link>\r\n    </div>\r\n}\r\n\r\nSongs.propTypes = {\r\n    loginAction: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, { loginAction })(Songs); ","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as Icons from 'heroicons-react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logoutAction } from '../store/actions/userActions';\r\n\r\n\r\nconst UserCreatedPlaylists = ({ logoutAction }) => {\r\n\r\n    // public, private, unlisted\r\n    const [statuses, setStatuses] = useState([]);\r\n    const [loadingStatus, setLoadingStatus] = useState(true);\r\n\r\n    // playlists created by user\r\n    const [userPlaylists, setUserPlaylists] = useState({});\r\n    const [loadingUserPlaylist, setLoadingUserPlaylist] = useState(true);\r\n    const [userPlaylistModal, setUserPlaylistModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // laod display status\r\n        fetch('/api/v1/display-status')\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setStatuses(data);\r\n                setLoadingStatus(false)\r\n            })\r\n\r\n        // get user playlists\r\n        fetch('/api/v1/user/playlists')\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setUserPlaylists(data)\r\n                setLoadingUserPlaylist(false)\r\n            })\r\n    }, [])\r\n\r\n    const handleUserPlaylistModal = () => {\r\n\r\n        setUserPlaylistModal(!userPlaylistModal);\r\n    }\r\n    return (<section className=\"bg-gray-800 rounded-lg shadow-lg max-w-3xl mt-10\">\r\n        {loadingUserPlaylist ?\r\n            <><h2>Loading...</h2></> :\r\n            <>\r\n                {userPlaylistModal && <CreatePlaylistModal logoutAction={logoutAction} close={setUserPlaylistModal} statuses={statuses} loadingStatus={loadingStatus} />}\r\n                {Object.keys(userPlaylists).length === 0 ? <div className=\"flex flex-col items-center space-y-5 mt-10 py-10 px-12 rounded-lg shadow-lg\">\r\n                    <button onClick={handleUserPlaylistModal} className=\"flex items-center justify-center px-3 py-2 max-w-xl space-x-3 rounded-lg shadow-md text-white bg-teal-800 hover:bg-teal-700\">\r\n                        <span className=\"text-white\"><Icons.Plus /></span>\r\n                        <span>Playlist</span></button>\r\n                    <p className=\"text-white font-semibold tracking-wide\">You do not have any playlists created, create one.</p>\r\n                </div> :\r\n                    <div className=\"flex flex-col w-full md:max-w-4xl mx-auto items-center justify-center mt-24 sm:px-2 py-2 sm:py-5 sm:rounded-lg bg-gray-800 shadow-xl overflow-auto\">\r\n                        <div className=\"flex items-center justify-between w-full px-3\">\r\n                            <span className=\"w-full text-center font-bold text-gray-100 uppercase tracking-wider text-xl\">Your Playlists</span>\r\n                            <button onClick={handleUserPlaylistModal} className=\"inline-flex items-center justify-between bg-indigo-500 text-white text-sm rounded-full shadow-md px-2 py-1\"><span><Icons.PlusOutline className=\"text-gray-400 w-4 h-4\" /></span> <span>Playlist</span></button>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-around space-x-3 py-2 px-0 w-full h-64 mt-5 overflow-x-auto overflow-y-hidden\">\r\n                            {Object.keys(userPlaylists).map(el => <PlaylistCard key={el} name={el} cover_image={userPlaylists[el].cover_image} />)}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        }\r\n    </section>\r\n\r\n    )\r\n}\r\nconst PlaylistCard = ({ name, cover_image, display_status = \"private\" }) => {\r\n    return (<div className=\"text-white rounded-lg shadow-md flex flex-col overflow-hidden w-64 h-full bg-red-700\">\r\n        <div className=\"overflow-hidden\">\r\n            <img className=\"w-64 h-64 object-cover object-center\" src={cover_image} alt={name} />\r\n        </div>\r\n        <div className=\"text-white bg-blue-800 text-md uppercase tracking-wider w-full text-center truncate px-3 py-2\">{name}</div>\r\n    </div>)\r\n}\r\n\r\nconst CreatePlaylistModal = ({ close, statuses, loadingStatus, logoutAction }) => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => {\r\n        console.log({ errors })\r\n\r\n        console.log(data)\r\n        const send_data = { ...data, 'is_playlist': 'playlist' }\r\n        fetch('/api/v1/user/song_collection/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(send_data)\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.success) {\r\n                    close(false)\r\n                } else {\r\n                    if (data.is_authenticated) {\r\n                        // send logout action \r\n                        logoutAction()\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return (<div className=\"fixed z-20 inset-0 w-full h-full flex flex-col items-center justify-center\">\r\n        <button onClick={() => close(false)}\r\n            className=\"cursor-default fixed w-full h-full inset-0 bg-black opacity-50\" />\r\n        {/* // TODO: Fetch songs */}\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"display-playlist relative z-30 flex flex-col space-y-10 items-start justify-center p-10 shadow-xl rounded-lg bg-blue-800\">\r\n            <input name=\"name\" ref={register({ required: true })} placeholder=\"Playlist Name\" className=\"px-4 py-3 rounded-lg\" />\r\n            <input name=\"cover_image\" ref={register} placeholder=\"Cover Image URL\" className=\"px-4 py-3 w-full rounded-lg\" />\r\n            <div className=\"flex items-center justify-around space-x-5\">\r\n                {!loadingStatus ? <>\r\n                    {statuses.map(status => <div key={status.pk}>\r\n                        <label htmlFor={`display-${status.pk}`}\r\n                            className=\"bg-gray-100 px-5 py-5 rounded-lg shadow-md border-none cursor-pointer hover:bg-blue-900 hover:text-white hover:shadow-xl\">\r\n                            {status.status}\r\n                        </label>\r\n                        <input id={`display-${status.pk}`} type=\"radio\"\r\n                            name=\"display-status\" value={status.pk}\r\n                            className=\"\"\r\n                            ref={register} />\r\n                    </div>)}\r\n\r\n                </> : <div className=\"w-full px-6 py-3  rounded-md\"><p className=\"text-gray-100 text-md tracking-wide\">Loading Display statuses...</p></div>}\r\n            </div>\r\n            <button type=\"submit\" className=\"inline-flex items-center justify-between space-x-3 mt-2 bg-teal-700 text-gray-100 hover:bg-teal-100 hover:text-black px-4 py-3 rounded-lg shadow-lg hover:shadow-xl uppercase text-md tracking-wider\">\r\n                <span><Icons.Plus /></span> <span>Playlist</span>\r\n            </button>\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nUserCreatedPlaylists.propTypes = {\r\n    logoutAction: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (_) => ({})\r\nexport default connect(mapStateToProps, { logoutAction })(UserCreatedPlaylists);\r\n\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as Icons from 'heroicons-react'\r\n\r\nimport UserCreatedPlaylists from '../components/UserCreatedPlaylists';\r\n\r\nconst Profile = ({ user }) => {\r\n\r\n    // const [userLikePlaylists, setUserLikedPlaylists] = useState([]);\r\n    // const [userAlbums, setUserAlbums] = useState([]);\r\n    // const [userLikeAlbums, setUserLikedAlbums] = useState([]);\r\n\r\n    if (!user.loggedIn) {\r\n        return <div className=\"fixed z-10 inset-0 flex items-center justify-center bg-gray-900 h-full\">\r\n            <h1 className=\"text-white text-4xl bg-teal-900 px-24 py-10 rounded-lg shadow-xl\">You need to log in</h1>\r\n        </div>\r\n    }\r\n    return (\r\n        <main className=\"max-w-4xl h-full py-10\">\r\n            <div>\r\n                <h1 className=\"text-2xl\">\r\n                    <span className=\"text-orange-500\">Lets make something happen </span>\r\n                    <span className=\"text-white uppercase font-bold\">{user.firstname}, {user.lastname}</span>\r\n                </h1>\r\n            </div>\r\n            {/* user playlists */}\r\n            <UserCreatedPlaylists />\r\n\r\n            {/* user liked playlists */}\r\n            {/* <CollectionDisplay collection={userLikePlaylists} nullMessage=\"You have not liked any playlists.\" /> */}\r\n\r\n            {/* user liked albums */}\r\n            {/* <CollectionDisplay isPlaylist={false} collection={userLikeAlbums} nullMessage=\"You have not liked any albums.\" /> */}\r\n\r\n            {/* user albums */}\r\n            {/* <CollectionDisplay isPlaylist={false} collection={userAlbums} nullMessage=\"You have not created any albums.\" /> */}\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\n\r\n// TODO: needs serious refactoring\r\nconst CollectionDisplay = ({ collection, collectionTitle = \"\", nullMessage, isPlaylist = true, onClick, children, loadingCollection = false }) => {\r\n    return <div className=\"bg-gray-800 rounded-lg shadow-lg max-w-3xl mt-10\">\r\n        {loadingCollection ? <div className=\"\">\r\n            <h2 className=\"text-white bg-teal-800 text-xl\">Loading...</h2></div> : <>\r\n                {children}\r\n                {Object.keys(collection).length === 0 ? <div className=\"flex flex-col items-center space-y-5 mt-10 py-10 px-12 rounded-lg shadow-lg\">\r\n                    <button onClick={onClick} className={`flex items-center justify-center px-3 py-2 max-w-xl space-x-3 rounded-lg shadow-md text-white ${isPlaylist ? 'bg-teal-800 hover:bg-teal-700' : 'bg-blue-800 hover:bg-blue-700'} `}>\r\n                        <span className=\"text-white\"><Icons.Plus /></span>\r\n                        <span>{isPlaylist ? 'Playlist' : 'Album'}</span></button>\r\n                    <p className=\"text-white font-semibold tracking-wide\">{nullMessage}</p>\r\n                </div> :\r\n                    <div className=\"flex flex-col space-y-3 items-center justify-center py-2 \">\r\n                        <div className=\"flex items-center justify-between w-full px-3\">\r\n                            {collectionTitle !== \"\" && <span className=\"w-full text-center font-bold text-orange-500 uppercase tracking-wider text-xl\">{collectionTitle}</span>}\r\n                            <button onClick={onClick} className=\"inline-flex items-center justify-between bg-teal-800 text-white text-xs rounded-full px-2 py-1\"><span><Icons.PlusOutline className=\"text-gray-400 w-4 h-4\" /></span> <span>Playlist</span></button>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-around space-x-3 overflow-scroll overflow-y-hidden w-full h-64\">\r\n                            {Object.keys(collection).map(el => <div key={el} class=\"text-white rounded-lg shadow-md flex flex-col overflow-hidden w-64 h-full bg-red-700\">\r\n                                <div className=\"overflow-hidden\">\r\n                                    <img className=\"w-64 h-64 object-cover object-center\" src={collection[el].cover_image} alt={el} />\r\n                                </div>\r\n                                <div className=\"text-white bg-blue-800 text-md uppercase tracking-wider w-full text-center\">{el}</div>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({ user })\r\nexport default connect(mapStateToProps, {})(Profile); \r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport * as Icons from 'heroicons-react';\r\n\r\nimport { logoutAction } from '../store/actions/userActions';\r\n\r\nconst Navbar = (props) => {\r\n    const { user, logoutAction } = props;\r\n    const [mobileMenu, setMobileMenu] = useState(true);\r\n    const [showActionDropdown, setShowActionDropdown] = useState(false);\r\n\r\n    const handleLogout = () => {\r\n        logoutAction();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleEsc = (event) => {\r\n            if (event.keyCode === 27) {\r\n                setShowActionDropdown(false)\r\n            }\r\n        };\r\n        window.addEventListener('keydown', handleEsc);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEsc);\r\n        };\r\n    }, [])\r\n\r\n    return (<nav className=\"relative z-20 flex items-center justify-between shadow-xl w-full h-full sm:py-2 sm:px-3 bg-teal-900 text-white\">\r\n        {/* mobile screen havbar */}\r\n        {/* <MobileNavbar {...props} /> */}\r\n        {/* small screen and above navbar */}\r\n        <NavLink to=\"/\" className=\"w-3/12 px-2 py-2 text-sm rounded-lg hover:bg-teal-800\">my-songify</NavLink>\r\n        <div className=\"w-9/12 hidden sm:flex justify-between\">\r\n            <div className=\"relative flex items-center justify-between space-x-3\">\r\n                <a href=\"/#about\" className=\"px-3 py-2 rounded-lg hover:bg-teal-800\">About</a>\r\n                <NavLink to='/songs' activeClassName=\"bg-teal-800 shadow-2xl\" className=\"px-3 py-2 rounded-lg hover:bg-teal-800\">Songs</NavLink>\r\n                <div className=\"relative\">\r\n                    <button onClick={() => setShowActionDropdown(true)} className=\"relative inline-flex items-center justify-between px-3 py-2 rounded-lg hover:bg-teal-800\"><span>Actions</span><span><Icons.ChevronDown className=\"w-6 h-6\" /></span>\r\n                    </button>\r\n                    {showActionDropdown && <>\r\n                        <button onClick={() => setShowActionDropdown(false)} className=\"fixed inset-0 z-10 h-full w-full\" tabIndex=\"-1\" />\r\n                        <div className=\"absolute top-0 left-0 mt-12 z-30 flex flex-col space-y-2 bg-gray-800 w-64 overflow-auto rounded-lg shadow-xl py-2\">\r\n                            <Link to=\"#\" className=\"px-3 py-1 hover:bg-gray-700\">\r\n                                Upload Song\r\n                        </Link>\r\n                            <Link to=\"#\" className=\"px-3 py-1 hover:bg-gray-700\">\r\n                                Create Playlist\r\n                        </Link>\r\n                            <Link to=\"#\" className=\"px-3 py-1 hover:bg-gray-700\">\r\n                                Create Album\r\n                        </Link>\r\n                        </div>\r\n                    </>}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-between space-x-3\">\r\n                {user.loggedIn ? <>\r\n                    <NavLink to=\"profile\" activeClassName=\"bg-teal-800 shadow-2xl\" className=\"text-gray-200 hover:text-gray-900 hover:bg-gray-100 px-3 py-2 rounded-lg shadow-xl\">Profile</NavLink>\r\n                    <button onClick={handleLogout} className=\"hover:bg-teal-800 text-gray-500 px-3 py-2 rounded-lg\">Logout</button>\r\n                </>\r\n                    : <>\r\n                        <NavLink to=\"/login\" activeClassName=\"bg-teal-800 shadow-2xl\" className=\"hover:bg-teal-800 px-3 py-2  rounded-lg\">Login</NavLink>\r\n                        <NavLink to=\"/register\" activeClassName=\"bg-teal-800 shadow-2xl\" className=\"hover:bg-teal-800 px-3 py-2 rounded-lg\">Register</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className=\"block sm:hidden px-2\">\r\n            <button onClick={() => setMobileMenu(!mobileMenu)} className=\"\"><Icons.MenuAlt4 className=\"w-8 h-8\" /></button>\r\n        </div>\r\n        {mobileMenu && <>\r\n            <button onClick={() => setMobileMenu(false)} className=\"fixed inset-0 z-10 h-full w-full\" tabIndex=\"-1\" />\r\n            <div className=\"absolute z-20 top-0 mt-10 flex flex-col sm:hidden bg-teal-800 text-white w-full\">\r\n                <div className=\"border-b-1 border-gray-900 flex flex-col\">\r\n                    <a href=\"/#about\" className=\"px-3 py-2 rounded-lg hover:bg-teal-700\">About</a>\r\n\r\n                    <Link to=\"/songs\" className=\"bg-teal-60 px-3\">Songs</Link>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <span className=\"text-gray-400 text-md px-3\">Actions</span>\r\n                    <div className=\"w-full flex flex-col space-y-1 pb-2\">\r\n                        <span className=\"px-3\">Upload Song</span>\r\n                        <span className=\"px-3\">Create Playlist</span>\r\n                        <span className=\"px-3\">Create Album</span>\r\n                    </div>\r\n                </div>\r\n                {user.loggedIn ? <>\r\n                    <span className=\"text-gray-400 text-md px-3\">User</span>\r\n                    <div className=\"w-full flex flex-col space-y-1 pb-2\">\r\n                        <NavLink to=\"profile\" className=\"px-3\">Profile</NavLink>\r\n                        <button onClick={handleLogout} className=\"bg-gray-900 px-3\">Logout</button>\r\n                    </div>\r\n                </>\r\n                    : <>\r\n                        <NavLink to=\"/login\" activeClassName=\"bg-teal-800 shadow-2xl\" className=\"hover:bg-teal-800 px-3 py-2  rounded-lg\">Login</NavLink>\r\n                        <NavLink to=\"/register\" activeClassName=\"bg-teal-800 shadow-2xl\" className=\"hover:bg-teal-800 px-3 py-2 rounded-lg\">Register</NavLink>\r\n                    </>\r\n                }\r\n            </div></>}\r\n    </nav >\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    logoutAction: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = ({ user }) => ({ user })\r\nexport default connect(mapStateToProps, { logoutAction })(Navbar);","import {\r\n    LOGIN_SENT, LOGIN_SUCCESS, LOGIN_FAILURE,\r\n    LOGOUT_SENT, LOGOUT_FAILURE, LOGOUT_SUCCESS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    is_admin: false,\r\n    id: -1,\r\n    loggedIn: false\r\n};\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_SENT:\r\n            return state;\r\n        case LOGIN_SUCCESS:\r\n            return { ...state, loggedIn: true, ...action.payload };\r\n        case LOGIN_FAILURE:\r\n            return { ...state, loggedIn: false, ...action.payload };\r\n        case LOGOUT_SENT:\r\n            return state;\r\n        case LOGOUT_FAILURE:\r\n            return state;\r\n        case LOGOUT_SUCCESS:\r\n            return { ...state, ...initialState }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst saveToLocalStorage = state => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem(\"state\", serializedState);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(\"state\");\r\n        if (serializedState == null) return undefined;\r\n        return JSON.parse(serializedState);\r\n    } catch (e) {\r\n        console.log(e);\r\n        return undefined;\r\n    }\r\n};\r\n\r\nconst persistedState = loadFromLocalStorage();\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(thunk)\r\n\r\n    // compose(\r\n    //     applyMiddleware(...middleware),\r\n    //     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // )\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\nexport default store;","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Songs from './pages/Songs';\nimport Profile from './pages/Profile';\nimport Navbar from './components/Navbar';\nimport store from \"./store\";\n\nclass App extends React.Component {\n  render() {\n    return <Provider store={store}><div className=\"bg-gray-900\">\n      <Navbar />\n      <div className=\"flex items-center justify-center w-full overflow-hidden\">\n        <Switch>\n          <Route path=\"/register\" exact><Register /></Route>\n          <Route path=\"/login\" exact><Login /></Route>\n          <Route path=\"/songs\" exact><Songs /></Route>\n          <Route path=\"/profile\" exact><Profile /></Route>\n          <Route path=\"/\"><Home /></Route>\n        </Switch>\n      </div>\n    </div></Provider>\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/output.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <Router> <App /></Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}